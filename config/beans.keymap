/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC    &kp Q  &kp W         &kp E             &kp R  &kp T        &kp Y          &kp U  &kp I              &kp O    &kp P     &kp EQUAL
&kp TAB    &kp A  &kp S         &mt LEFT_SHIFT D  &kp F  &kp G        &kp H          &kp J  &mt RIGHT_SHIFT K  &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X         &kp C             &kp V  &kp B        &kp N          &kp M  &kp COMMA          &kp DOT  &kp FSLH  &kp MINUS
                  &kp LEFT_ALT  &mo 2             &mo 1  &kp SPACE    &kp BACKSPACE  &mo 1  &mo 2              &kp RET
            >;
        };

        layer_1 {
            bindings = <
&kp TILDE  &kp F1    &kp F2          &kp F3      &kp F4      &kp F5         &kp F6     &kp F7    &kp F8      &kp F9                &kp F10                &none
&kp LBKT   &kp N1    &kp N2          &kp N3      &kp N4      &kp N5         &kp N6     &kp N7    &kp N8      &kp N9                &kp N0                 &kp RBKT
&kp PIPE   &kp EXCL  &kp AT          &kp HASH    &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS  &kp ASTRK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
                     &kp LEFT_BRACE  &kp DELETE  &trans      &trans         &trans     &trans    &kp DELETE  &kp RIGHT_BRACE
            >;
        };

        layer_2 {
            bindings = <
&kp LG(LS(S))  &kp BACKSLASH  &kp ENTER          &kp UP_ARROW  &kp LC(LS(R))  &kp LC(LA(LS(T)))    &none   &none     &kp UP_ARROW  &none      &kp LC(LA(DELETE))  &bt BT_CLR
&kp LS(TAB)    &kp LC(LS(H))  &kp LEFT           &kp DOWN      &kp RIGHT      &kp LA(LC(G))        &none   &kp LEFT  &kp DOWN      &kp RIGHT  &none               &bt BT_SEL 0
&trans         &kp LC(LS(L))  &kp LC(BACKSLASH)  &kp LA(N8)    &kp LA(N9)     &kp LC(LA(B))        &none   &none     &none         &none      &bt BT_SEL 2        &bt BT_SEL 1
                              &kp LG(V)          &trans        &none          &trans               &trans  &none     &trans        &trans
            >;
        };
    };
};
